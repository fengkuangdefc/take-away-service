package com.chenkesi.transaction.mapper;

import com.chenkesi.transaction.domain.entity.TransMessage;
import com.chenkesi.transaction.domain.entity.TransMessageExample;
import com.chenkesi.transaction.domain.entity.TransMessageKey;
import org.apache.ibatis.annotations.Param;

import java.util.List;

public interface TransMessageMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table trans_message
     *
     * @mbggenerated
     */
    int countByExample(TransMessageExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table trans_message
     *
     * @mbggenerated
     */
    int deleteByExample(TransMessageExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table trans_message
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(TransMessageKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table trans_message
     *
     * @mbggenerated
     */
    int insert(TransMessage record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table trans_message
     *
     * @mbggenerated
     */
    int insertSelective(TransMessage record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table trans_message
     *
     * @mbggenerated
     */
    List<TransMessage> selectByExampleWithBLOBs(TransMessageExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table trans_message
     *
     * @mbggenerated
     */
    List<TransMessage> selectByExample(TransMessageExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table trans_message
     *
     * @mbggenerated
     */
    TransMessage selectByPrimaryKey(TransMessageKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table trans_message
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") TransMessage record, @Param("example") TransMessageExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table trans_message
     *
     * @mbggenerated
     */
    int updateByExampleWithBLOBs(@Param("record") TransMessage record, @Param("example") TransMessageExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table trans_message
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") TransMessage record, @Param("example") TransMessageExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table trans_message
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(TransMessage record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table trans_message
     *
     * @mbggenerated
     */
    int updateByPrimaryKeyWithBLOBs(TransMessage record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table trans_message
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(TransMessage record);

    int updateByIdAndService(@Param("id") String id, @Param("service") String serviceName);

    int updateTypeBySequence(@Param("sequence") int sequence, @Param("type") String type);
}